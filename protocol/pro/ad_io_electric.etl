//io ad 采样发送指令
bitrl protocol io_ad_electric_send {
    segment device_type {parser:'uint8', autovalue: 0} //设备类型
    segment function_type {parser:'uint8', autovalue: 0} //功能(通道选择)
    oneof (this.device_type == 11){
        oneof (this.function_type == 11){
            segment dim_send {parser:'uint16<', autovalue: 0}
        }
        oneof(this.function_type ~= 11){
            segment a {}
        }
    }
    oneof (this.device_type == 12){
        oneof (this.function_type == 11){
            segment dim_send {parser:'uint16<', autovalue: 0}
        }
        oneof(this.function_type ~= 11){
            segment c {}
        }
    }
    
    oneof (this.device_type ~= 12){
        segment b {}
    }
}
//io ad 采样接收指令
bitrl protocol io_ad_electric_recv {
    segment device_type {parser: 'uint8', autovalue: 0}  //设备
    segment function_type {parser: 'uint8', autovalue: 0} //功能
    
    oneof (this.function_type == 251) { //初始化回复
        segment test_code {parser: 'uint8', autovalue: 0} //测试项
    }
    oneof (this.function_type == 250) { //心跳回复
        segment test_code {} //测试项
    }
    oneof (this.function_type == 252) { //测试结束标志
        segment test_code {parser: 'uint8', autovalue: 0} //测试项
    }
    oneof (this.device_type == 5){ //AD采样接收指令
        segment data {parser:'int16<', autovalue: 0}

    }
    oneof (this.device_type == 7){ //IO采样接收指令
        segment data {parser:'int16<', autovalue: 0}

    }
    oneof (this.device_type == 10) { //can协议接收
        segment can_id {parser:'uint32<', autovalue: 0 }
        segment can_len {parser: 'uint8', autovalue: 0}
        segment can_data {parser:'uint64<', autovalue: 0} 
    }
    oneof (this.device_type == 11){ //MIC协议接收
        segment mic_data {parser:'uint16<', autovalue:0}
    }
    oneof (this.device_type == 12) { //1553B协议接收
        segment b1553_data {parser:'uint16<', autovalue:0}

    }
    oneof (this.device_type == 13) { //FlexRay协议接收
        segment flexray_len {parser:'uint8', autovalue: 0 }
        segment flexray_data {parser:'uint8', autovalue: 0} //40
    }
}


//电阻r_out DA 下发控制指令
bitrl protocol control_electric_send {
    segment device_type {parser:'uint8', autovalue: 0} //设备类型
    segment function_type {parser:'uint8', autovalue: 0} //功能(通道选择)
    segment data {parser:'uint8', autovalue: 0} //要控制的值
}